{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmefmun\\\\OneDrive - PERSEUS MANAGEMENT GROUP INC\\\\Desktop\\\\Task-Manager-System\\\\TMS-FrontEnd\\\\src\\\\context\\\\TokenProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport jwtDecode from 'jwt-decode';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport function TokenProvider({\n  children\n}) {\n  _s();\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      const decode = jwtDecode(token);\n      const ID = decode[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\n      const role = decode[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n      setUser({\n        ID,\n        role\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n  const SetToken = newToken => {\n    setToken(newToken);\n    const decode = jwtDecode(newToken);\n    const ID = decode[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\n    const role = decode[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    setUser({\n      ID,\n      role\n    });\n    sessionStorage.setItem('token', newToken);\n  };\n  const clearToken = () => {\n    setToken(null);\n    setUser(null);\n    sessionStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      SetToken,\n      clearToken,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenProvider, \"qZE3QAOm6tGVQyX3uQ6Woo+KoU4=\");\n_c = TokenProvider;\nexport function useToken() {\n  _s2();\n  return useContext(TokenContext);\n}\n_s2(useToken, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["jwtDecode","React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","token","setToken","sessionStorage","getItem","user","setUser","storedToken","decode","ID","role","SetToken","newToken","setItem","clearToken","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useToken","_s2","$RefreshReg$"],"sources":["C:/Users/ahmefmun/OneDrive - PERSEUS MANAGEMENT GROUP INC/Desktop/Task-Manager-System/TMS-FrontEnd/src/context/TokenProvider.jsx"],"sourcesContent":["import jwtDecode from 'jwt-decode';\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst TokenContext = createContext();\r\n\r\nexport function TokenProvider({ children }) {\r\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const storedToken = sessionStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      const decode = jwtDecode(token)\r\n      const ID = decode[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\r\n      const role = decode[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"]\r\n      setUser({ ID, role })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const SetToken = (newToken) => {\r\n    setToken(newToken);\r\n    const decode = jwtDecode(newToken)\r\n    const ID = decode[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\r\n    const role = decode[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"]\r\n    setUser({ ID, role })\r\n    sessionStorage.setItem('token', newToken);\r\n  };\r\n\r\n  const clearToken = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    sessionStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <TokenContext.Provider value={{ token, SetToken, clearToken, user }}>\r\n      {children}\r\n    </TokenContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useToken() {\r\n  return useContext(TokenContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACnE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGJ,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IACnD,IAAIG,WAAW,EAAE;MACfL,QAAQ,CAACK,WAAW,CAAC;MACrB,MAAMC,MAAM,GAAGnB,SAAS,CAACY,KAAK,CAAC;MAC/B,MAAMQ,EAAE,GAAGD,MAAM,CAAC,sEAAsE,CAAC;MACzF,MAAME,IAAI,GAAGF,MAAM,CAAC,8DAA8D,CAAC;MACnFF,OAAO,CAAC;QAAEG,EAAE;QAAEC;MAAK,CAAC,CAAC;IACvB;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BV,QAAQ,CAACU,QAAQ,CAAC;IAClB,MAAMJ,MAAM,GAAGnB,SAAS,CAACuB,QAAQ,CAAC;IAClC,MAAMH,EAAE,GAAGD,MAAM,CAAC,sEAAsE,CAAC;IACzF,MAAME,IAAI,GAAGF,MAAM,CAAC,8DAA8D,CAAC;IACnFF,OAAO,CAAC;MAAEG,EAAE;MAAEC;IAAK,CAAC,CAAC;IACrBP,cAAc,CAACU,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;EAC3C,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBZ,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;IACbH,cAAc,CAACY,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED,oBACEnB,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEU,QAAQ;MAAEG,UAAU;MAAET;IAAK,CAAE;IAAAN,QAAA,EACjEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACrB,EAAA,CApCeF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAsC7B,OAAO,SAASyB,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,OAAOhC,UAAU,CAACK,YAAY,CAAC;AACjC;AAAC2B,GAAA,CAFeD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}