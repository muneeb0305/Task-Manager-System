{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmefmun\\\\OneDrive - PERSEUS MANAGEMENT GROUP INC\\\\Desktop\\\\Task-Manager-System\\\\TMS-FrontEnd\\\\src\\\\context\\\\CommentProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { FetchData } from '../utils/FetchData';\nimport { DeleteData } from '../utils/DeleteData';\nimport { PostData } from '../utils/PostData';\nimport { PutData } from '../utils/PutData';\nimport { useToken } from './TokenProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentContext = /*#__PURE__*/createContext();\nexport function CommentProvider({\n  children\n}) {\n  _s();\n  // States\n  const [comment, setComment] = useState([]);\n  const [selectedComment, setSelectedComment] = useState(null);\n  // Get Token\n  const {\n    token\n  } = useToken();\n\n  // Get All Comments by Task Id\n  const getComment = async id => {\n    const CommentApi = `https://localhost:7174/api/Comment/task/${id}`;\n    const res = await FetchData(CommentApi, token);\n    setComment(res);\n  };\n  // Get Comment by ID\n  const getCommentById = async id => {\n    const CommentApi = `https://localhost:7174/api/Comment/${id}`;\n    const res = await FetchData(CommentApi, token);\n    setSelectedComment(res);\n  };\n  // Delete Comment\n  const remove = async id => {\n    const deleteAPI = `https://localhost:7174/api/Comment/${id}`;\n    await DeleteData(deleteAPI, token);\n    const newData = comment.filter(c => c.id !== id);\n    setComment(newData);\n  };\n  // Create Comment\n  const create = async (id, newComment) => {\n    const CreateApi = `https://localhost:7174/api/Comment/${id}`;\n    const res = await PostData(CreateApi, newComment, token);\n    return res;\n  };\n  // Update Team\n  const update = async (id, updatedComment) => {\n    const UpdateApi = `https://localhost:7174/api/Comment/${id}`;\n    const res = await PutData(UpdateApi, updatedComment, token);\n    return res;\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContext.Provider, {\n    value: {\n      selectedComment,\n      comment,\n      create,\n      remove,\n      update,\n      getComment,\n      getCommentById\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(CommentProvider, \"EldrW9NFaQlf24/AkdmBjxBzRcU=\", false, function () {\n  return [useToken];\n});\n_c = CommentProvider;\nexport function useCommentData() {\n  _s2();\n  return useContext(CommentContext);\n}\n_s2(useCommentData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CommentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","FetchData","DeleteData","PostData","PutData","useToken","jsxDEV","_jsxDEV","CommentContext","CommentProvider","children","_s","comment","setComment","selectedComment","setSelectedComment","token","getComment","id","CommentApi","res","getCommentById","remove","deleteAPI","newData","filter","c","create","newComment","CreateApi","update","updatedComment","UpdateApi","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCommentData","_s2","$RefreshReg$"],"sources":["C:/Users/ahmefmun/OneDrive - PERSEUS MANAGEMENT GROUP INC/Desktop/Task-Manager-System/TMS-FrontEnd/src/context/CommentProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { FetchData } from '../utils/FetchData';\r\nimport { DeleteData } from '../utils/DeleteData';\r\nimport { PostData } from '../utils/PostData';\r\nimport { PutData } from '../utils/PutData';\r\nimport { useToken } from './TokenProvider';\r\n\r\nconst CommentContext = createContext();\r\n\r\nexport function CommentProvider({ children }) {\r\n    // States\r\n    const [comment, setComment] = useState([]);\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    // Get Token\r\n    const { token } = useToken()\r\n\r\n    // Get All Comments by Task Id\r\n    const getComment = async (id) => {\r\n        const CommentApi = `https://localhost:7174/api/Comment/task/${id}`\r\n        const res = await FetchData(CommentApi, token)\r\n        setComment(res)\r\n    }\r\n    // Get Comment by ID\r\n    const getCommentById = async (id) => {\r\n        const CommentApi = `https://localhost:7174/api/Comment/${id}`;\r\n        const res = await FetchData(CommentApi, token);\r\n        setSelectedComment(res)\r\n    }\r\n    // Delete Comment\r\n    const remove = async (id) => {\r\n        const deleteAPI = `https://localhost:7174/api/Comment/${id}`\r\n        await DeleteData(deleteAPI, token)\r\n        const newData = comment.filter(c => c.id !== id)\r\n        setComment(newData)\r\n    };\r\n    // Create Comment\r\n    const create = async (id, newComment) => {\r\n        const CreateApi = `https://localhost:7174/api/Comment/${id}`\r\n        const res = await PostData(CreateApi, newComment, token)\r\n        return res\r\n    };\r\n    // Update Team\r\n    const update = async (id, updatedComment) => {\r\n        const UpdateApi = `https://localhost:7174/api/Comment/${id}`\r\n        const res = await PutData(UpdateApi, updatedComment, token)\r\n        return res\r\n    };\r\n\r\n    return (\r\n        <CommentContext.Provider value={{ selectedComment, comment, create, remove, update, getComment, getCommentById }}>\r\n            {children}\r\n        </CommentContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useCommentData() {\r\n    return useContext(CommentContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,gBAAGV,aAAa,CAAC,CAAC;AAEtC,OAAO,SAASW,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5D;EACA,MAAM;IAAEgB;EAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC;;EAE5B;EACA,MAAMY,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,MAAMC,UAAU,GAAI,2CAA0CD,EAAG,EAAC;IAClE,MAAME,GAAG,GAAG,MAAMnB,SAAS,CAACkB,UAAU,EAAEH,KAAK,CAAC;IAC9CH,UAAU,CAACO,GAAG,CAAC;EACnB,CAAC;EACD;EACA,MAAMC,cAAc,GAAG,MAAOH,EAAE,IAAK;IACjC,MAAMC,UAAU,GAAI,sCAAqCD,EAAG,EAAC;IAC7D,MAAME,GAAG,GAAG,MAAMnB,SAAS,CAACkB,UAAU,EAAEH,KAAK,CAAC;IAC9CD,kBAAkB,CAACK,GAAG,CAAC;EAC3B,CAAC;EACD;EACA,MAAME,MAAM,GAAG,MAAOJ,EAAE,IAAK;IACzB,MAAMK,SAAS,GAAI,sCAAqCL,EAAG,EAAC;IAC5D,MAAMhB,UAAU,CAACqB,SAAS,EAAEP,KAAK,CAAC;IAClC,MAAMQ,OAAO,GAAGZ,OAAO,CAACa,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC;IAChDL,UAAU,CAACW,OAAO,CAAC;EACvB,CAAC;EACD;EACA,MAAMG,MAAM,GAAG,MAAAA,CAAOT,EAAE,EAAEU,UAAU,KAAK;IACrC,MAAMC,SAAS,GAAI,sCAAqCX,EAAG,EAAC;IAC5D,MAAME,GAAG,GAAG,MAAMjB,QAAQ,CAAC0B,SAAS,EAAED,UAAU,EAAEZ,KAAK,CAAC;IACxD,OAAOI,GAAG;EACd,CAAC;EACD;EACA,MAAMU,MAAM,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,cAAc,KAAK;IACzC,MAAMC,SAAS,GAAI,sCAAqCd,EAAG,EAAC;IAC5D,MAAME,GAAG,GAAG,MAAMhB,OAAO,CAAC4B,SAAS,EAAED,cAAc,EAAEf,KAAK,CAAC;IAC3D,OAAOI,GAAG;EACd,CAAC;EAED,oBACIb,OAAA,CAACC,cAAc,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,eAAe;MAAEF,OAAO;MAAEe,MAAM;MAAEL,MAAM;MAAEQ,MAAM;MAAEb,UAAU;MAAEI;IAAe,CAAE;IAAAX,QAAA,EAC5GA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC;AAAC3B,EAAA,CA5CeF,eAAe;EAAA,QAKTJ,QAAQ;AAAA;AAAAkC,EAAA,GALd9B,eAAe;AA8C/B,OAAO,SAAS+B,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC7B,OAAO1C,UAAU,CAACS,cAAc,CAAC;AACrC;AAACiC,GAAA,CAFeD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}