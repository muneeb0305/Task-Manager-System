{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmefmun\\\\OneDrive - PERSEUS MANAGEMENT GROUP INC\\\\Desktop\\\\Task-Manager-System\\\\TMS-FrontEnd\\\\src\\\\context\\\\ProjectProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { FetchData } from '../utils/FetchData';\nimport { DeleteData } from '../utils/DeleteData';\nimport { PostData } from '../utils/PostData';\nimport { PutData } from '../utils/PutData';\nimport { useToken } from './TokenProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContext = /*#__PURE__*/createContext();\nexport function ProjectProvider({\n  children\n}) {\n  _s();\n  // States\n  const [project, setProject] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  // Get Token\n  const {\n    token\n  } = useToken();\n\n  // Get Project\n  const getProject = async () => {\n    const projectApi = 'https://localhost:7174/api/Project';\n    const res = await FetchData(projectApi, token);\n    setProject(res);\n  };\n  //Get Project by Project Id\n  const getProjectById = async id => {\n    const projectApi = `https://localhost:7174/api/Project/${id}`;\n    const res = await FetchData(projectApi, token);\n    setSelectedProject(res);\n  };\n  // Delete Project\n  const remove = async id => {\n    const deleteAPI = `https://localhost:7174/api/Project/${id}`;\n    await DeleteData(deleteAPI, token);\n    getProject();\n  };\n  // Create Project\n  const create = async newProject => {\n    const CreateApi = `https://localhost:7174/api/Project`;\n    const res = await PostData(CreateApi, newProject, token);\n    getProject();\n    return res;\n  };\n  // Update Project\n  const update = async (id, editProject) => {\n    const UpdateApi = `https://localhost:7174/api/Project/${id}`;\n    const res = await PutData(UpdateApi, editProject, token);\n    getProject();\n    return res;\n  };\n  // Assign Project\n  const assignProject = async data => {\n    const AssignApi = `https://localhost:7174/api/Project/assign_project`;\n    const res = await PutData(AssignApi, data, token);\n    return res;\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      selectedProject,\n      project,\n      create,\n      remove,\n      update,\n      getProjectById,\n      getProject,\n      assignProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectProvider, \"W4HQLu+4wU8o28WVii+78kONu7E=\", false, function () {\n  return [useToken];\n});\n_c = ProjectProvider;\nexport function useProjectData() {\n  _s2();\n  return useContext(ProjectContext);\n}\n_s2(useProjectData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","FetchData","DeleteData","PostData","PutData","useToken","jsxDEV","_jsxDEV","ProjectContext","ProjectProvider","children","_s","project","setProject","selectedProject","setSelectedProject","token","getProject","projectApi","res","getProjectById","id","remove","deleteAPI","create","newProject","CreateApi","update","editProject","UpdateApi","assignProject","data","AssignApi","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProjectData","_s2","$RefreshReg$"],"sources":["C:/Users/ahmefmun/OneDrive - PERSEUS MANAGEMENT GROUP INC/Desktop/Task-Manager-System/TMS-FrontEnd/src/context/ProjectProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { FetchData } from '../utils/FetchData';\r\nimport { DeleteData } from '../utils/DeleteData';\r\nimport { PostData } from '../utils/PostData';\r\nimport { PutData } from '../utils/PutData';\r\nimport { useToken } from './TokenProvider';\r\n\r\nconst ProjectContext = createContext();\r\n\r\nexport function ProjectProvider({ children }) {\r\n    // States\r\n    const [project, setProject] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    // Get Token\r\n    const { token } = useToken()\r\n\r\n    // Get Project\r\n    const getProject = async () => {\r\n        const projectApi = 'https://localhost:7174/api/Project'\r\n        const res = await FetchData(projectApi, token)\r\n        setProject(res)\r\n    }\r\n    //Get Project by Project Id\r\n    const getProjectById = async (id) => {\r\n        const projectApi = `https://localhost:7174/api/Project/${id}`;\r\n        const res = await FetchData(projectApi, token);\r\n        setSelectedProject(res)\r\n    }\r\n    // Delete Project\r\n    const remove = async (id) => {\r\n        const deleteAPI = `https://localhost:7174/api/Project/${id}`\r\n        await DeleteData(deleteAPI, token)\r\n        getProject()\r\n    };\r\n    // Create Project\r\n    const create = async (newProject) => {\r\n        const CreateApi = `https://localhost:7174/api/Project`\r\n        const res = await PostData(CreateApi, newProject, token)\r\n        getProject()\r\n        return res\r\n    };\r\n    // Update Project\r\n    const update = async (id, editProject) => {\r\n        const UpdateApi = `https://localhost:7174/api/Project/${id}`\r\n        const res = await PutData(UpdateApi, editProject, token)\r\n        getProject()\r\n        return res\r\n    };\r\n    // Assign Project\r\n    const assignProject = async (data) => {\r\n        const AssignApi = `https://localhost:7174/api/Project/assign_project`\r\n        const res = await PutData(AssignApi, data, token)\r\n        return res\r\n    };\r\n    return (\r\n        <ProjectContext.Provider value={{  selectedProject, project, create, remove, update, getProjectById, getProject, assignProject }}>\r\n            {children}\r\n        </ProjectContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useProjectData() {\r\n    return useContext(ProjectContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}